#!/usr/bin/env bash

try-lock "git-lock" || return 0
if is_app_installed git; then
  cfg="git config --global"
  if is_app_installed gpg; then
    GPG_SIGNINGKEY=$(gpg --list-secret-keys --keyid-format LONG | grep sec | awk '{print $2}' | cut -d/ -f 2)

    if [[ -n $GPG_SIGNINGKEY ]]; then 
      export GPG_TTY=$(tty)
      $cfg user.signingkey $GPG_SIGNINGKEY
      $cfg commit.gpgsign true
      $cfg gpg.program gpg
    fi
  fi
  check_dotfile ~/.gitignore_global || ln -s $(pwd)/git/gitignore_global ~/.gitignore_global

  # core config

  $cfg core.excludesfile "~/.gitignore_global"
  $cfg core.autocrlf input
  $cfg core.editor vim
  $cfg mergetool.keepBackup false

  # pull config
  $cfg pull.rebase true

  # aliases

  $cfg alias.lg "log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"
  $cfg alias.st status
  $cfg alias.ctags 'hook run ctags'

  # init

  $cfg init.templatedir $(pwd)/git-templates

  # use new protocol

  $cfg protocol.version 2

  source ./git/git-wrappers

  # install git-filter-repo
  if [ ! -f "$WORKDIR/.git-filter-repo/git-filter-repo" ]; then
    pushd $WORKDIR >&1 >/dev/null
    git clone https://github.com/newren/git-filter-repo.git .git-filter-repo  --depth=1 --quiet
    pushd .git-filter-repo >&1 >/dev/null
    git remote set-branches origin docs 
    git fetch --dept=1 --quiet
    mkdir -p man/man1
    git show origin/docs:man1/git-filter-repo.1 >man/man1/git-filter-repo.1
  fi

  [[ "$PATH" == *"git-filter-repo"* ]] || PATH=$WORKDIR/.git-filter-repo:$PATH

  # git prompt
  source $(pwd)/git/git-prompt
fi
