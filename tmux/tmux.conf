# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sessionist'  # utilities for manipulating tmux sessions
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-cpu'
# set -g @plugin 'jamesoff/tmux-loadavg'
# set -g @plugin 'robhurring/tmux-uptime'


# -- general -------------------------------------------------------------------

set -g prefix C-a                         # Change prefix key to C-a
unbind C-b
bind C-a send-prefix                      # press C-a twice to send prefix to the application inside tmux

bind " " next-window
bind C-" " next-window
bind C-d detach-client

# set -g default-command "${SHELL}"
set -g default-terminal "xterm-256color"  # colors!
set -ag terminal-overrides ",xterm-256color:RGB"
set -s escape-time 0                      # faster command sequences
set -g history-limit 20000                # boost history
setw -g mode-keys vi                      # set vi mode keys

# -- key bindings --------------------------------------------------------------

bind r source-file ~/.tmux.conf \; display-message "tmux configuration file reloaded..."

# pane switching
bind h   select-pane -L
bind C-h select-pane -L
bind j   select-pane -D
bind C-j select-pane -D
bind k   select-pane -U
bind C-k select-pane -U
bind l   select-pane -R
bind C-l select-pane -R

# pane move
bind "<" swap-pane -d -t -1
bind ">" swap-pane -d -t +1

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# split panes
# btw, I think tmux devs are wrong: https://github.com/tmux/tmux/issues/213
# They are saying split on the horizontal line (x), efectivally dividing in two 
# side by side vertically, and split on the vertical line (y), dividing in two,
# up and down horizontally.  They are confusing but it is what it is.
# I had to put this here for sanity sakes.
bind "|" split-window -h -c "#{pane_current_path}"
bind "%" split-window -hf -c "#{pane_current_path}"
bind "-" split-window -v -c "#{pane_current_path}"
bind "_" split-window -vf -c "#{pane_current_path}"

# improve new window binding
bind c new-window -c "#{pane_current_path}"

bind T neww -c "#{pane_current_path}" -n "TODO" "[[ -f TODO.md ]] && nvim TODO.md || nvim ~/journal/todo.md"

# forget the find window.  That is for chumps
bind f run-shell "tmux neww tmux-sessionizer"
bind / command-prompt -p "(man)" "new-window -an '[%1 man]' 'exec man %1'"

bind i run-shell "tmux neww ~/dotfiles/cht.sh"
bind C-D run-shell "~/dotfiles/tmux/tmux-sessionizer ~/dotfiles"

# -- copy mode, scroll ---------------------------------------------------------

bind P paste-buffer
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi C-v send-keys -X begin-selection \; send-keys -X rectangle-toggle

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles off         # set terminal title
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g status-interval 5      # redraw status line every 5 seconds

set -g focus-events on

# Enable mouse support
set -g mouse on

# activity
set -g monitor-activity on
set -g visual-activity off
set -g bell-action none
set -g visual-bell off

# -- sessionist config

set -g @sessionist-join-pane "g"

# -- Themes --------------------------------------------------------------------

# -- Color palette -------------------------------------------------------------

# this are named colors, just for convenience
color_orange=colour208 # 208, 166
color_purple=colour135 # 135, 134
color_green=colour70 # 70, 76
color_blue=colour39
color_yellow=colour214
color_red=colour160
color_black=colour235
color_white=colour15 # 015

# This is a theme CONTRACT
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text=colour245
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator=colour88
color_window_off_status_bg=colour238
color_window_off_status_current_bg=colour254

# -- Appearance and status bar -------------------------------------------------

set -g mode-style "fg=default,bg=$color_main,none"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# status line style
set -g status-style "fg=$color_status_text,bg=default,none"

# window segments in status line
set -g window-status-separator " "

setw -g window-status-format "#I:#W"
setw -g window-status-style "bg=default,none"
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]#I:#W#F#[fg=$color_main,bg=$color_dark#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# general status bar settings
set -g status on
set -g status-position top
set -g status-justify left
set -g status-right-length 100
set -g status-left-length 20

# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
wg_session="#[fg=$color_session_text] #S #[default]"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#h"
# wg_uptime="#(uptime | awk \"{if(NF==10) print \\$3; else if (NF==11) print \\$3,\\$4; else if (NF==12) print \\$3,\\$4,\\$5; else print \\$3,\\$4,\\$5,\\$6}\" | sed \"s/,//g\")"
wg_uptime="#{uptime}"
wg_cpu="CPU:#{cpu_fg_color}#{cpu_percentage}#[default]"
wg_loadavg="#{load_full}#[default]"
wg_date="#[fg=$color_secondary]%h %d %H:%M#[default]"

wg_is_client_prefix="#[fg=$color_dark,bg=$color_secondary]#{?client_prefix,[^A],}#[default]"
wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-left "$wg_session"
# set -g status-right "$wg_is_client_prefix $wg_is_keys_off $wg_is_zoomed $wg_cpu | $wg_loadavg | up $wg_uptime | $wg_user_host | $wg_date"
# set -g status-right "$wg_is_client_prefix $wg_is_keys_off $wg_is_zoomed $wg_cpu | $wg_loadavg | up $wg_uptime | #{pane_title} | $wg_date"
# set -g status-right "$wg_is_client_prefix $wg_is_keys_off $wg_is_zoomed $wg_cpu | $wg_loadavg | up $wg_uptime | Per Aspera Ad Astra | $wg_date"
set -g status-right "$wg_is_client_prefix $wg_is_keys_off $wg_is_zoomed Per Aspera Ad Astra | $wg_date"
# set -g status-right "$wg_is_client_prefix $wg_is_keys_off $wg_is_zoomed Per Aspera Ad Astra"

# Configure tmux-cpu widget colors
set -g @cpu_low_fg_color "#[fg=$color_level_ok]"
set -g @cpu_medium_fg_color "#[fg=$color_level_warn]"
set -g @cpu_high_fg_color "#[fg=$color_level_stress]"

set -g @cpu_low_bg_color "#[fg=$color_level_ok]"
set -g @cpu_medium_bg_color "#[fg=$color_level_warn]"
set -g @cpu_high_bg_color "#[fg=$color_level_stress]"


# -- Nesting local and remote sessions  ----------------------------------------

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CONNECTION"' \
  'source-file ~/.tmux.remote.conf'

# We wan't to have a single prefix key "C-a" for both local and remote sessions
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# Also, change some visual style when window keys are on/off
bind -T root F12 \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]#[default]#I:#W#F#[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
# -- End -----------------------------------------------------------------------
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
