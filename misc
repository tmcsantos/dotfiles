#!/usr/bin/env bash

# OS specific support.
darwin=false;
case "$(uname -s)" in
  Darwin*)
    darwin=true
    ;;
esac

RED='\033[0;31m'; B_RED='\033[1;31m'
GREEN='\033[0;32m'; B_GREEN='\033[1;32m'
YELLOW='\033[0;33m'; B_YELLOW='\033[1;33m'
BLUE='\033[0;34m'; B_BLUE='\033[1;34m'
MAGENTA='\033[0;35m'; B_MAGENTA='\033[1;35m'
CYAN='\033[0;36m'; B_CYAN='\033[1;36m'
WHITE='\033[0;37m'; B_WHITE='\033[1;37m'
NC='\033[0m' # Return to default colour

export WORKDIR="$HOME/projects"
export COLUMNS
export LINES

if [ "${darwin}" = "false" ]; then
  alias open='xdg-open'
fi

# make sure WORKDIR exists
mkdir -p ${WORKDIR}

# Verbosity
alias \
  cp='cp -iv' \
  mv='mv -iv' \
  rm='rm -v'

# Colorize commands when possible
alias \
  ls='ls -hNGF --color=auto --group-directories-first' \
  grep='grep --color=auto' \
  diff='diff --color=auto' \
  less='less -R' 

# Some other stuff
alias \
  ll='ls -l' \
  la='ls -al' \
  tailf='tail -f' \
  top='btop 2>/dev/null || htop 2>/dev/null || \top' \
  tree='tree -a --charset utf-8 -I ".git|__pycache__|*.pyc|.git|.venv|.idea"' \
  va='source .venv/bin/activate' \
  ve='python3 -m venv --symlinks .venv; source .venv/bin/activate; pip install -U pip; pip install flake8 pylint yapf wheel ipython'

usagesort() {
  du -h -d 1 $1 | sort -k 1,1 -g
}

is_app_installed() {
  command -v "$1" &>/dev/null
}

check_dotfile() {
  # if file is a symbolic link but broken, 
  # delete it so it can be recreated
  local dotfile="$1"
  [[ ! -r $dotfile && -L $dotfile ]] && rm $dotfile
  [[ -r $dotfile ]]
}

die() {
  echo -e "${RED}$@${NC}" >&2
  exit 1
}

error() {
  echo -e "${B_RED}[ERROR]${NC} ${RED}$@${NC}"
}

warn() {
  echo -e "${B_YELLOW}[WARN]${NC} ${YELLOW}$@${NC}"
}

info() {
  echo -e "${B_GREEN}[INFO]${NC} ${GREEN}$@${NC}"
}

debug() {
  echo -e "${B_CYAN}[DEBUG]${NC} ${CYAN}$@${NC}"
}

realpath() {
  OURPWD=${PWD}
  cd "$(dirname "${1}")"
  LINK=$(readlink "$(basename "${1}")")
  while [ "${LINK}" ]; do
    cd "$(dirname "${LINK}")"
    LINK=$(readlink "$(basename "${1}")")
  done
  REALPATH="${PWD}/$(basename "${1}")"
  cd "${OURPWD}"
  echo "${REALPATH}"
}

### Load .env files
dotenv() {
  if [ -f .env ]; then
    set -o allexport; source .env; set +o allexport
  fi
}

try-lock() {
  __LOCKFILE="${TMPDIR:-/tmp}/$1"
  if ( set -o noclobber; : > "${__LOCKFILE}" ) &>/dev/null; then
    trap 'rm -f "${__LOCKFILE}" &>/dev/null' INT TERM EXIT RETURN
    return 0
  fi
  return 1
}

if [ "${darwin}" = "true" ]; then
  used_ports() {
    netstat -Watnlv | grep LISTEN | awk '{"ps -ww -o args= -p " $9 | getline procname;colred="\033[01;31m";colclr="\033[0m"; print colred "proto: " colclr $1 colred " | addr.port: " colclr $4 colred " | pid: " colclr $9 colred " | name: " colclr procname;  }' | column -t -s "|"
  }
  cpu_check() {
    pmset -g therm  
    sudo powermetrics --samplers smc -i1 -n1
  }
fi
