#!/usr/bin/env bash

# OS specific support.
darwin=false;
case "$(uname -s)" in
  Darwin*)
    darwin=true
    ;;
esac


RED='\033[0;31m'
B_RED='\033[1;31m'
GREEN='\033[0;32m'
B_GREEN='\033[1;32m'
YELLOW='\033[0;33m'
B_YELLOW='\033[1;33m'
CYAN='\033[0;36m'
B_CYAN='\033[1;36m'
NC='\033[0m'

export WORKDIR="$HOME/Projects"
export COLUMNS
export LINES

if [ "${darwin}" = "false" ]; then
  alias open='xdg-open'
fi

# make sure WORKDIR exists
mkdir -p ${WORKDIR}

# Verbosity
alias \
  cp='cp -iv' \
  mv='mv -iv' \
  rm='rm -v'

# Colorize commands when possible
alias \
  ls='ls -hNGF --color=auto --group-directories-first' \
  grep='grep --color=auto' \
  diff='diff --color=auto' \
  ccat='highlight --out-format=ansi --force'

# Some other stuff
alias \
  ll='ls -l' \
  la='ls -al' \
  tailf='tail -f' \
  top='htop' \
  tree='tree -a --charset utf-8 -I ".git|__pycache__|*.pyc|.git|.venv|.idea"' \
  va='source .venv/bin/activate' \
  ve='python3 -m venv --symlinks .venv; source .venv/bin/activate; pip install flake8 pylint wheel'

usagesort() {
  du -h -d 1 $1 | sort -k 1,1 -g
}

is_app_installed() {
  type "$1" &>/dev/null
}

check_dotfile() {
  # if file is a symbolic link but broken, 
  # delete it so it can be recreated
  local dotfile="$1"
  [[ ! -r $dotfile && -L $dotfile ]] && rm $dotfile
  [[ -r $dotfile ]]
}

die() {
  echo -e "${RED}$@${NC}" >&2
  exit 1
}

error() {
  echo -e "${B_RED}[ERROR]${NC} ${RED}$@${NC}"
}

warn() {
  echo -e "${B_YELLOW}[WARN]${NC} ${YELLOW}$@${NC}"
}

info() {
  echo -e "${B_GREEN}[INFO]${NC} ${GREEN}$@${NC}"
}

debug() {
  echo -e "${B_CYAN}[DEBUG]${NC} ${CYAN}$@${NC}"
}

realpath() {
  OURPWD=${PWD}
  cd "$(dirname "${1}")"
  LINK=$(readlink "$(basename "${1}")")
  while [ "${LINK}" ]; do
    cd "$(dirname "${LINK}")"
    LINK=$(readlink "$(basename "${1}")")
  done
  REALPATH="${PWD}/$(basename "${1}")"
  cd "${OURPWD}"
  echo "${REALPATH}"
}

### compare files/folders using meld
function meld-diff {
  if [ "${darwin}" = "true" ]; then
    open -W -a Meld --args ${1} ${2}
  else
    meld ${1} ${2}
  fi
}

