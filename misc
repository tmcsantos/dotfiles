#!/bin/bash

# OS specific support.
darwin=false;
case "$(uname -s)" in
  Darwin*)
    darwin=true
    ;;
esac


RED='\033[0;31m'
B_RED='\033[1;31m'
GREEN='\033[0;32m'
B_GREEN='\033[1;32m'
YELLOW='\033[0;33m'
B_YELLOW='\033[1;33m'
CYAN='\033[0;36m'
B_CYAN='\033[1;36m'
NC='\033[0m'

export WORKDIR="$HOME/Projects"
export COLUMNS
export LINES
export VISUAL=vim
export EDITOR="$VISUAL"

# make sure WORKDIR exists
mkdir -p ${WORKDIR}

if [ "${darwin}" = "true" ]; then
  alias ls='ls -GF'
else
  alias ls='ls -GF --color=auto'
fi

alias ll='ls -GFhl'
alias la='ls -GFhal'
alias tailf='tail -f'
alias top='htop'
alias tree='tree -a --charset utf-8'

function usagesort {
  du -h -d 1 $1 | sort -k 1,1 -g
}

die() {
    echo -e "${RED}$@${NC}" >&2
    exit 1
}

error() {
  echo -e "${B_RED}[ERROR]${NC} ${RED}$@${NC}"
}

warn() {
  echo -e "${B_YELLOW}[WARN]${NC} ${YELLOW}$@${NC}"
}

info() {
    echo -e "${B_GREEN}[INFO]${NC} ${GREEN}$@${NC}"
}

debug() {
    echo -e "${B_CYAN}[DEBUG]${NC} ${CYAN}$@${NC}"
}

realpath() {
  OURPWD=${PWD}
  cd "$(dirname "${1}")"
  LINK=$(readlink "$(basename "${1}")")
  while [ "${LINK}" ]; do
    cd "$(dirname "${LINK}")"
    LINK=$(readlink "$(basename "${1}")")
  done
  REALPATH="${PWD}/$(basename "${1}")"
  cd "${OURPWD}"
  echo "${REALPATH}"
}

### compare files/folders using meld
if [ "${darwin}" = "true" ]; then
  function meld-diff {
    open -W -a Meld --args ${1} ${2}
  }
fi

# Shows you the largest objects in your repo's pack file.
# Written for osx.
#
# @see http://stubbisms.wordpress.com/2009/07/10/git-script-to-show-largest-pack-objects-and-trim-your-waist-line/
# @author Antony Stubbs

function git-du {
  # set the internal field separator to line break, so that we can iterate easily over the verify-pack output
  IFS=$'\n';

  # list all objects including their size, sort by size, take top 10
  objects=`git verify-pack -v .git/objects/pack/pack-*.idx | grep -v chain | sort -k3nr | head`

  echo "All sizes are in kB. The pack column is the size of the object, compressed, inside the pack file."

  output="size,pack,SHA,location"
  for y in ${objects}
  do
    # extract the size in bytes
    size=$((`echo $y | cut -f 5 -d ' '`/1024))
    # extract the compressed size in bytes
    compressedSize=$((`echo $y | cut -f 6 -d ' '`/1024))
    # extract the SHA
    sha=`echo $y | cut -f 1 -d ' '`
    # find the objects location in the repository tree
    other=`git rev-list --all --objects | grep $sha`
    #lineBreak=`echo -e "\n"`
    output="${output}\n${size},${compressedSize},${other}"
  done

  echo -e $output | column -t -s ', '
}
